---
import Layout from "@/layouts/Layout.astro";
import { statusColor } from "@/styles/statusColors";
import { getCollection, render } from "astro:content";

import Github from "@/components/icons/Github.astro";
import { ICONS } from "@/components/icons/Icons.astro";
import Web from "@/components/icons/Web.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.map((project) => ({
    params: { project: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { data, slug } = project;
const { title, url, repository, stack, status } = data;

const { Content } = await render(project);

export const prerender = true;
---

<Layout title={`${title} - Projects`}>
  <div class="Container">
    <aside>
      <span>{"⬅️ "}<a href="/#Projects">{"Go back"}</a></span>

      <div class="Links">
        <h3>Links</h3>
        {
          url && (
            <a
              href={url}
              title={`Visit ${title} on ${url}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Web size={20} />
            </a>
          )
        }{
          repository &&
            repository.map((repo) => (
              <a
                href={repo}
                title={`Visit ${title}'s Github repository on ${repo}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Github size={20} />
              </a>
            ))
        }
      </div>
      <div class="Stack">
        <h3>Technologies</h3>
        {
          stack.map((name) => {
            const Icon = ICONS[name];

            return Icon ? (
              <span>
                <Icon size={14} />
                {name}
              </span>
            ) : (
              <span>{name}</span>
            );
          })
        }
      </div>
      <div class="Status">
        <h3>Status</h3>
        <span
          style={`background-color: color-mix(in oklab, ${statusColor[status]}, #fff 60%); border: solid 2px color-mix(in oklab, ${statusColor[status]}, #fff 10%)`}
          >{status}</span
        >
      </div>
    </aside>
    <main>
      <h1>{title}</h1>
      <Content />
    </main>
  </div>

  <style>
    .Container {
      display: flex;
      flex-direction: row;
      padding: 75px;
      height: calc(100% - 150px);
      width: calc(100% - 150px);
    }
    aside {
      position: fixed;
      flex-direction: column;
      gap: 2rem;
      display: flex;
      border-right: solid 2px #33333380;
      padding: 20px;
      width: 350px;
      height: calc(100vh - 190px);
      span {
        font-size: 16px;
        > a {
          color: #333;
          &:hover {
            text-decoration: underline;
          }
        }
      }
      .Links,
      .Stack {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        gap: 1rem;
        > h3 {
          margin: 0;
          width: 100%;
        }
        > a {
          padding: 5px;
          border: solid 2px rgb(228, 228, 228);
          background-color: rgb(253, 253, 253);
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 6px;
          transition: all ease 0.2s;
          &:hover {
            background-color: rgb(240, 240, 240);
          }
        }
        > span {
          display: flex;
          gap: 0.2rem;
          border-radius: 6px;
          background: #eee;
          color: #444;
          font-size: 0.75rem;
          font-weight: 500;
          padding: 0.2rem 0.6rem;
          align-items: center;
          justify-content: center;
        }
      }
      .Preview {
        width: 100%;
        height: 700px;
        overflow: hidden;
        position: relative;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        iframe {
          width: 120%;
          height: 120%;
          transform: scale(0.75);
          transform-origin: top left;
          border: none;
          position:;
        }
      }
      .Status {
        display: flex;
        flex-direction: column;
        gap: 1rem;

        span {
          padding: 5px 12px;
          width: fit-content;
          border-radius: 12px;
          font-weight: 500;
          font-size: 1rem;
        }
      }
    }
    main {
      display: flex;
      width: calc(100% - 390px);
      margin-left: 390px;
      flex-direction: column;
      padding-inline: 50px;
      gap: 1rem;

      > h1,
      h2 {
        width: 100%;
        text-align: center;
      }

      ul {
        list-style-type: disc;
        padding-left: 2rem;
      }
      img {
        width: 100%;
        height: auto;
      }
      pre {
        padding: 5px;
      }
    }
  </style>
</Layout>
