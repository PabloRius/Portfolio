---
import CalendarIcon from "@/components/icons/calendar-icon";
import DatabaseIcon from "@/components/icons/database-icon";
import FilecheckIcon from "@/components/icons/filecheck-icon";
import ShieldIcon from "@/components/icons/shield-icon";
import UsersIcon from "@/components/icons/users-icon";
import BackLink from "@/components/links/back-link.astro";
import ProjectGallery from "@/components/project/gallery.astro";
import ProjectHeader from "@/components/project/header.astro";
import HighlightSection from "@/components/project/highlight-section.astro";
import OtherProjects from "@/components/project/other-projects.astro";
import Section from "@/components/project/section.astro";
import ProjectTechnicalHighlights from "@/components/project/technical-highlights.astro";
import Layout from "@/layouts/Layout.astro";
import { getEntry } from "astro:content";

const project = await getEntry("projects", "mediconnect");
const { data, id } = project!;
const { img } = data;

export const prerender = true;
---

<Layout>
  <main class="container px-4 py-12 max-w-7xl mx-auto">
    <BackLink />
    <ProjectHeader project={data} category="Healthcare Platform" year="2025" />

    <ProjectGallery
      imgs={[
        { src: img[0], alt: "Mediconnect - Home page" },
        { src: img[1], alt: "Mediconnect - Patient's dashboard" },
      ]}
    />

    <div class="space-y-8 mt-8">
      <div class="prose prose-slate dark:prose-invert max-w-none">
        <Section title="Project Overview">
          <p>
            MediConnect is an online healthcare platform that bridges the gap
            between patients and healthcare providers. Built using the T3 stack
            (Next.js, TypeScript, and Prisma), this platform offers an intuitive
            interface for patients to book appointments and for doctors to
            manage their schedules efficiently.
          </p>

          <p>
            This project represents my first implementation of the T3 stack,
            combining the power of Next.js for frontend and API routes,
            TypeScript for type safety, and Prisma for database operations. The
            platform also incorporates OAuth authentication with the Prisma
            adapter to ensure secure user sessions.
          </p>
        </Section>
        <ProjectTechnicalHighlights
          list={[
            {
              icon: UsersIcon,
              title: "Dual Role System",
              content:
                "Separate interfaces and permissions for patients and doctors, with role-specific features.",
            },
            {
              icon: CalendarIcon,
              title: "Appointment Management",
              content:
                "Intuitive booking system for patients and schedule management for doctors.",
            },
            {
              icon: ShieldIcon,
              title: "Secure Authentication",
              content:
                "OAuth integration with secure credentials and secure session management using Prisma adapter.",
            },
            {
              icon: DatabaseIcon,
              title: "Prisma ORM",
              content:
                "Type-safe database operations with Prisma for efficient data management.",
            },
          ]}
        />

        <Section title="Technical Implementation">
          <p>
            MediConnect leverages the T3 stack to create a robust and type-safe
            application. Here's a breakdown of the key technical aspects:
          </p>

          <ul>
            <li>
              <strong>Next.js:</strong> Provides server-side rendering, API routes,
              and optimized performance for a seamless user experience.
            </li>
            <li>
              <strong>TypeScript:</strong> Ensures type safety throughout the application,
              reducing runtime errors and improving developer experience.
            </li>
            <li>
              <strong>Prisma:</strong> Offers a type-safe database client for efficient
              data modeling and querying, simplifying database operations.
            </li>
            <li>
              <strong>OAuth Authentication:</strong> Implements secure user authentication
              with multiple providers (Google, GitHub) using the Prisma adapter.
            </li>
            <li>
              <strong>Tailwind CSS:</strong> Provides utility-first styling for a
              responsive and consistent UI across all devices.
            </li>
          </ul></Section
        >
        <HighlightSection title="Quality Assurance Process">
          <p class="text-muted-foreground mb-4">
            MediConnect was developed with a strong focus on quality assurance.
            A comprehensive testing plan was implemented to ensure the
            platform's reliability and security:
          </p>
          <ul class="space-y-2">
            <li class="flex items-start gap-2">
              <div
                class="h-5 w-5 rounded-full bg-blue-100 dark:bg-blue-900/50 flex items-center justify-center flex-shrink-0 mt-0.5"
              >
                <FilecheckIcon
                  className="h-3 w-3 text-blue-600 dark:text-blue-400"
                />
              </div>
              <span class="text-muted-foreground"
                >Comprehensive testing plan documentation</span
              >
            </li>
            <li class="flex items-start gap-2">
              <div
                class="h-5 w-5 rounded-full bg-blue-100 dark:bg-blue-900/50 flex items-center justify-center flex-shrink-0 mt-0.5"
              >
                <FilecheckIcon
                  className="h-3 w-3 text-blue-600 dark:text-blue-400"
                />
              </div>
              <span class="text-muted-foreground">E2E and unit testing</span>
            </li>
            <li class="flex items-start gap-2">
              <div
                class="h-5 w-5 rounded-full bg-blue-100 dark:bg-blue-900/50 flex items-center justify-center flex-shrink-0 mt-0.5"
              >
                <FilecheckIcon
                  className="h-3 w-3 text-blue-600 dark:text-blue-400"
                />
              </div>
              <span class="text-muted-foreground"
                >Integration testing for all implemented flows</span
              >
            </li>
            <li class="flex items-start gap-2">
              <div
                class="h-5 w-5 rounded-full bg-blue-100 dark:bg-blue-900/50 flex items-center justify-center flex-shrink-0 mt-0.5"
              >
                <FilecheckIcon
                  className="h-3 w-3 text-blue-600 dark:text-blue-400"
                />
              </div>
              <span class="text-muted-foreground"
                >Accessibility testing to ensure platform usability for all
                users and devices</span
              >
            </li>
          </ul>
        </HighlightSection>

        <Section title="Challenges and Solutions">
          <p>
            Developing MediConnect presented several challenges that required
            creative solutions:
          </p>

          <ul>
            <li>
              <strong>Dual Role System:</strong> Implementing different views and
              permissions for patients and doctors required careful planning of the
              database schema and authentication flow. I solved this by creating
              a role field in the User model and implementing role-based access control
              throughout the application.
            </li>
            <li>
              <strong>Appointment Scheduling Logic:</strong> Creating a system that
              prevents double-bookings and handles time slots efficiently was complex.
              I implemented a custom scheduling algorithm that checks for conflicts
              and validates availability before confirming appointments.
            </li>
            <li>
              <strong>Type Safety with Prisma:</strong> Ensuring type safety across
              the application while working with Prisma required careful setup of
              TypeScript types and interfaces. I created utility types that extend
              Prisma's generated types to maintain consistency throughout the codebase.
            </li>
            <li>
              <strong>OAuth Integration:</strong> Configuring OAuth providers with
              the Prisma adapter required precise implementation to ensure secure
              authentication. I followed best practices for environment variable
              management and session handling to maintain security.
            </li>
          </ul></Section
        >

        <h2>Lessons Learned</h2>
        <p>
          MediConnect was my first project using the T3 stack, and it provided
          valuable learning experiences:
        </p>

        <ul>
          <li>
            <strong>T3 Stack Benefits:</strong> I gained a deep appreciation for
            the type safety and developer experience provided by the T3 stack. The
            combination of Next.js, TypeScript, and Prisma significantly reduced
            runtime errors and improved code quality.
          </li>
          <li>
            <strong>Database Design Importance:</strong> I learned the importance
            of careful database schema design, especially for applications with complex
            relationships like patient-doctor connections and appointment scheduling.
          </li>
          <li>
            <strong>Authentication Complexity:</strong> Implementing OAuth with role-based
            access control taught me about the nuances of secure authentication systems
            and session management.
          </li>
          <li>
            <strong>QA Process Value:</strong> Developing and following a comprehensive
            testing plan significantly improved the reliability of the application
            and reduced the number of bugs in production.
          </li>
        </ul>

        <p>
          MediConnect represents an important milestone in my development
          journey, showcasing my ability to build complex, type-safe
          applications with modern web technologies. The project demonstrates my
          understanding of full-stack development, database design, and
          authentication systems.
        </p>
      </div>

      <OtherProjects id={id} />
    </div>
  </main></Layout
>
